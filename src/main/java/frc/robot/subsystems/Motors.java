// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;



//import com.ctre.phoenix.motorcontrol.can.TalonFX;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.revrobotics.CANSparkBase.IdleMode;
import com.revrobotics.CANSparkFlex;
import com.revrobotics.CANSparkLowLevel.MotorType;
import com.revrobotics.CANSparkMax;

import edu.wpi.first.wpilibj2.command.SubsystemBase;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Motors extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private CANSparkMax neo;
private WPI_TalonFX talonFX;
private WPI_TalonSRX talonSRX;
private CANSparkMax neo550;
private CANSparkFlex sparkFlex;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Motors() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
neo = new CANSparkMax(21, MotorType.kBrushless);
 
 neo.restoreFactoryDefaults();  
neo.setInverted(false);
neo.setIdleMode(IdleMode.kCoast);
neo.burnFlash();
  

talonFX = new WPI_TalonFX(13);
 
 

talonSRX = new WPI_TalonSRX(15);
 
 

neo550 = new CANSparkMax(20, MotorType.kBrushless);
 
 neo550.restoreFactoryDefaults();  
neo550.setInverted(false);
neo550.setIdleMode(IdleMode.kCoast);
neo550.burnFlash();
  

sparkFlex = new CANSparkFlex(0, MotorType.kBrushless);
 
 sparkFlex.restoreFactoryDefaults();  
sparkFlex.setInverted(false);
sparkFlex.setIdleMode(IdleMode.kCoast);
sparkFlex.burnFlash();
  


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void spinTalonFX(){
        talonFX.set(0.1);
    }

    public void stopTalonFX(){
        talonFX.set(0);
    }

    public void spinTalonSRX(){
        talonSRX.set(0.2);
    }

    public void stopTalonSRX(){
        talonSRX.set(0);
    }

    public void spinNeo(){
        neo.set(0.3);
    }

    public void stopNeo(){
        neo.set(0);
    }
   
    public void spinNeo550(){
        neo550.set(0.3);
    }

    public void stopNeo550(){
        neo550.set(0);
    
    }
    
    public void spinSparkFlex(){
        sparkFlex.set(0.3);
    }

    public void stopSparkFlex(){
        sparkFlex.set(0);
    }
}




